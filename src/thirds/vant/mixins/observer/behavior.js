"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function setAsync(context, data) {
    return new Promise(function (resolve) {
        context.setData(data, resolve);
    });
}
;
exports.behavior = Behavior({
    created: function created() {
        var _this = this;
        if (!this.$options) {
            return;
        }
        var cache = {};
        var computed = this.$options().computed;
        var keys = Object.keys(computed);
        this.calcComputed = function () {
            var needUpdate = {};
            keys.forEach(function (key) {
                var value = computed[key].call(_this);
                if (cache[key] !== value) {
                    cache[key] = needUpdate[key] = value;
                }
            });
            return needUpdate;
        };
    },
    attached: function attached() {
        this.set();
    },
    methods: {
        // set data and set computed data
        set: function set(data, callback) {
            var _this = this;
            var stack = [];
            if (data) {
                stack.push(setAsync(this, data));
            }
            if (this.calcComputed) {
                stack.push(setAsync(this, this.calcComputed()));
            }
            return Promise.all(stack).then(function (res) {
                if (callback && typeof callback === 'function') {
                    callback.call(_this);
                }
                return res;
            });
        }
    }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJlaGF2aW9yLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwic2V0QXN5bmMiLCJjb250ZXh0IiwiZGF0YSIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0RGF0YSIsImJlaGF2aW9yIiwiQmVoYXZpb3IiLCJjcmVhdGVkIiwiX3RoaXMiLCIkb3B0aW9ucyIsImNhY2hlIiwiY29tcHV0ZWQiLCJrZXlzIiwiY2FsY0NvbXB1dGVkIiwibmVlZFVwZGF0ZSIsImZvckVhY2giLCJrZXkiLCJjYWxsIiwiYXR0YWNoZWQiLCJzZXQiLCJtZXRob2RzIiwiY2FsbGJhY2siLCJzdGFjayIsInB1c2giLCJhbGwiLCJ0aGVuIiwicmVzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsT0FBT0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkMsRUFBRUMsT0FBTyxJQUFULEVBQTdDO0FBQ0EsU0FBU0MsUUFBVCxDQUFrQkMsT0FBbEIsRUFBMkJDLElBQTNCLEVBQWlDO0FBQzdCLFdBQU8sSUFBSUMsT0FBSixDQUFZLFVBQVVDLE9BQVYsRUFBbUI7QUFDbENILGdCQUFRSSxPQUFSLENBQWdCSCxJQUFoQixFQUFzQkUsT0FBdEI7QUFDSCxLQUZNLENBQVA7QUFHSDtBQUNEO0FBQ0FOLFFBQVFRLFFBQVIsR0FBbUJDLFNBQVM7QUFDeEJDLGFBQVMsbUJBQVk7QUFDakIsWUFBSUMsUUFBUSxJQUFaO0FBQ0EsWUFBSSxDQUFDLEtBQUtDLFFBQVYsRUFBb0I7QUFDaEI7QUFDSDtBQUNELFlBQUlDLFFBQVEsRUFBWjtBQUNBLFlBQUlDLFdBQVcsS0FBS0YsUUFBTCxHQUFnQkUsUUFBL0I7QUFDQSxZQUFJQyxPQUFPakIsT0FBT2lCLElBQVAsQ0FBWUQsUUFBWixDQUFYO0FBQ0EsYUFBS0UsWUFBTCxHQUFvQixZQUFZO0FBQzVCLGdCQUFJQyxhQUFhLEVBQWpCO0FBQ0FGLGlCQUFLRyxPQUFMLENBQWEsVUFBVUMsR0FBVixFQUFlO0FBQ3hCLG9CQUFJbEIsUUFBUWEsU0FBU0ssR0FBVCxFQUFjQyxJQUFkLENBQW1CVCxLQUFuQixDQUFaO0FBQ0Esb0JBQUlFLE1BQU1NLEdBQU4sTUFBZWxCLEtBQW5CLEVBQTBCO0FBQ3RCWSwwQkFBTU0sR0FBTixJQUFhRixXQUFXRSxHQUFYLElBQWtCbEIsS0FBL0I7QUFDSDtBQUNKLGFBTEQ7QUFNQSxtQkFBT2dCLFVBQVA7QUFDSCxTQVREO0FBVUgsS0FuQnVCO0FBb0J4QkksY0FBVSxvQkFBWTtBQUNsQixhQUFLQyxHQUFMO0FBQ0gsS0F0QnVCO0FBdUJ4QkMsYUFBUztBQUNMO0FBQ0FELGFBQUssYUFBVWxCLElBQVYsRUFBZ0JvQixRQUFoQixFQUEwQjtBQUMzQixnQkFBSWIsUUFBUSxJQUFaO0FBQ0EsZ0JBQUljLFFBQVEsRUFBWjtBQUNBLGdCQUFJckIsSUFBSixFQUFVO0FBQ05xQixzQkFBTUMsSUFBTixDQUFXeEIsU0FBUyxJQUFULEVBQWVFLElBQWYsQ0FBWDtBQUNIO0FBQ0QsZ0JBQUksS0FBS1ksWUFBVCxFQUF1QjtBQUNuQlMsc0JBQU1DLElBQU4sQ0FBV3hCLFNBQVMsSUFBVCxFQUFlLEtBQUtjLFlBQUwsRUFBZixDQUFYO0FBQ0g7QUFDRCxtQkFBT1gsUUFBUXNCLEdBQVIsQ0FBWUYsS0FBWixFQUFtQkcsSUFBbkIsQ0FBd0IsVUFBVUMsR0FBVixFQUFlO0FBQzFDLG9CQUFJTCxZQUFZLE9BQU9BLFFBQVAsS0FBb0IsVUFBcEMsRUFBZ0Q7QUFDNUNBLDZCQUFTSixJQUFULENBQWNULEtBQWQ7QUFDSDtBQUNELHVCQUFPa0IsR0FBUDtBQUNILGFBTE0sQ0FBUDtBQU1IO0FBakJJO0FBdkJlLENBQVQsQ0FBbkIiLCJmaWxlIjoiYmVoYXZpb3IuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmZ1bmN0aW9uIHNldEFzeW5jKGNvbnRleHQsIGRhdGEpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICAgICAgY29udGV4dC5zZXREYXRhKGRhdGEsIHJlc29sdmUpO1xuICAgIH0pO1xufVxuO1xuZXhwb3J0cy5iZWhhdmlvciA9IEJlaGF2aW9yKHtcbiAgICBjcmVhdGVkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmICghdGhpcy4kb3B0aW9ucykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBjYWNoZSA9IHt9O1xuICAgICAgICB2YXIgY29tcHV0ZWQgPSB0aGlzLiRvcHRpb25zKCkuY29tcHV0ZWQ7XG4gICAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoY29tcHV0ZWQpO1xuICAgICAgICB0aGlzLmNhbGNDb21wdXRlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBuZWVkVXBkYXRlID0ge307XG4gICAgICAgICAgICBrZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IGNvbXB1dGVkW2tleV0uY2FsbChfdGhpcyk7XG4gICAgICAgICAgICAgICAgaWYgKGNhY2hlW2tleV0gIT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhY2hlW2tleV0gPSBuZWVkVXBkYXRlW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBuZWVkVXBkYXRlO1xuICAgICAgICB9O1xuICAgIH0sXG4gICAgYXR0YWNoZWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5zZXQoKTtcbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgICAgLy8gc2V0IGRhdGEgYW5kIHNldCBjb21wdXRlZCBkYXRhXG4gICAgICAgIHNldDogZnVuY3Rpb24gKGRhdGEsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAgICAgdmFyIHN0YWNrID0gW107XG4gICAgICAgICAgICBpZiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIHN0YWNrLnB1c2goc2V0QXN5bmModGhpcywgZGF0YSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuY2FsY0NvbXB1dGVkKSB7XG4gICAgICAgICAgICAgICAgc3RhY2sucHVzaChzZXRBc3luYyh0aGlzLCB0aGlzLmNhbGNDb21wdXRlZCgpKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoc3RhY2spLnRoZW4oZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjayAmJiB0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2suY2FsbChfdGhpcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn0pO1xuIl19