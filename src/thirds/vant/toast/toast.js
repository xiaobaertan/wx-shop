"use strict";

var __assign = undefined && undefined.__assign || function () {
    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) {
                if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require('./../common/utils.js');
var defaultOptions = {
    type: 'text',
    mask: false,
    message: '',
    show: true,
    zIndex: 1000,
    duration: 3000,
    position: 'middle',
    forbidClick: false,
    loadingType: 'circular',
    selector: '#van-toast'
};
var queue = [];
var currentOptions = __assign({}, defaultOptions);
function parseOptions(message) {
    return utils_1.isObj(message) ? message : { message: message };
}
function getContext() {
    var pages = getCurrentPages();
    return pages[pages.length - 1];
}
var Toast = function Toast(options) {
    if (options === void 0) {
        options = {};
    }
    options = __assign({}, currentOptions, parseOptions(options));
    var context = options.context || getContext();
    var toast = context.selectComponent(options.selector);
    if (!toast) {
        console.warn('未找到 van-toast 节点，请确认 selector 及 context 是否正确');
        return;
    }
    delete options.context;
    delete options.selector;
    queue.push(toast);
    toast.set(options);
    clearTimeout(toast.timer);
    if (options.duration > 0) {
        toast.timer = setTimeout(function () {
            toast.clear();
            queue = queue.filter(function (item) {
                return item !== toast;
            });
        }, options.duration);
    }
    return toast;
};
var createMethod = function createMethod(type) {
    return function (options) {
        return Toast(__assign({ type: type }, parseOptions(options)));
    };
};
['loading', 'success', 'fail'].forEach(function (method) {
    Toast[method] = createMethod(method);
});
Toast.clear = function () {
    queue.forEach(function (toast) {
        toast.clear();
    });
    queue = [];
};
Toast.setDefaultOptions = function (options) {
    Object.assign(currentOptions, options);
};
Toast.resetDefaultOptions = function () {
    currentOptions = __assign({}, defaultOptions);
};
exports.default = Toast;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvYXN0LmpzIl0sIm5hbWVzIjpbIl9fYXNzaWduIiwiT2JqZWN0IiwiYXNzaWduIiwidCIsInMiLCJpIiwibiIsImFyZ3VtZW50cyIsImxlbmd0aCIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidXRpbHNfMSIsInJlcXVpcmUiLCJkZWZhdWx0T3B0aW9ucyIsInR5cGUiLCJtYXNrIiwibWVzc2FnZSIsInNob3ciLCJ6SW5kZXgiLCJkdXJhdGlvbiIsInBvc2l0aW9uIiwiZm9yYmlkQ2xpY2siLCJsb2FkaW5nVHlwZSIsInNlbGVjdG9yIiwicXVldWUiLCJjdXJyZW50T3B0aW9ucyIsInBhcnNlT3B0aW9ucyIsImlzT2JqIiwiZ2V0Q29udGV4dCIsInBhZ2VzIiwiZ2V0Q3VycmVudFBhZ2VzIiwiVG9hc3QiLCJvcHRpb25zIiwiY29udGV4dCIsInRvYXN0Iiwic2VsZWN0Q29tcG9uZW50IiwiY29uc29sZSIsIndhcm4iLCJwdXNoIiwic2V0IiwiY2xlYXJUaW1lb3V0IiwidGltZXIiLCJzZXRUaW1lb3V0IiwiY2xlYXIiLCJmaWx0ZXIiLCJpdGVtIiwiY3JlYXRlTWV0aG9kIiwiZm9yRWFjaCIsIm1ldGhvZCIsInNldERlZmF1bHRPcHRpb25zIiwicmVzZXREZWZhdWx0T3B0aW9ucyIsImRlZmF1bHQiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLElBQUlBLFdBQVksYUFBUSxVQUFLQSxRQUFkLElBQTJCLFlBQVk7QUFDbERBLGVBQVdDLE9BQU9DLE1BQVAsSUFBaUIsVUFBU0MsQ0FBVCxFQUFZO0FBQ3BDLGFBQUssSUFBSUMsQ0FBSixFQUFPQyxJQUFJLENBQVgsRUFBY0MsSUFBSUMsVUFBVUMsTUFBakMsRUFBeUNILElBQUlDLENBQTdDLEVBQWdERCxHQUFoRCxFQUFxRDtBQUNqREQsZ0JBQUlHLFVBQVVGLENBQVYsQ0FBSjtBQUNBLGlCQUFLLElBQUlJLENBQVQsSUFBY0wsQ0FBZDtBQUFpQixvQkFBSUgsT0FBT1MsU0FBUCxDQUFpQkMsY0FBakIsQ0FBZ0NDLElBQWhDLENBQXFDUixDQUFyQyxFQUF3Q0ssQ0FBeEMsQ0FBSixFQUNiTixFQUFFTSxDQUFGLElBQU9MLEVBQUVLLENBQUYsQ0FBUDtBQURKO0FBRUg7QUFDRCxlQUFPTixDQUFQO0FBQ0gsS0FQRDtBQVFBLFdBQU9ILFNBQVNhLEtBQVQsQ0FBZSxJQUFmLEVBQXFCTixTQUFyQixDQUFQO0FBQ0gsQ0FWRDtBQVdBTixPQUFPYSxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QyxFQUFFQyxPQUFPLElBQVQsRUFBN0M7QUFDQSxJQUFJQyxVQUFVQyxRQUFRLGlCQUFSLENBQWQ7QUFDQSxJQUFJQyxpQkFBaUI7QUFDakJDLFVBQU0sTUFEVztBQUVqQkMsVUFBTSxLQUZXO0FBR2pCQyxhQUFTLEVBSFE7QUFJakJDLFVBQU0sSUFKVztBQUtqQkMsWUFBUSxJQUxTO0FBTWpCQyxjQUFVLElBTk87QUFPakJDLGNBQVUsUUFQTztBQVFqQkMsaUJBQWEsS0FSSTtBQVNqQkMsaUJBQWEsVUFUSTtBQVVqQkMsY0FBVTtBQVZPLENBQXJCO0FBWUEsSUFBSUMsUUFBUSxFQUFaO0FBQ0EsSUFBSUMsaUJBQWlCL0IsU0FBUyxFQUFULEVBQWFtQixjQUFiLENBQXJCO0FBQ0EsU0FBU2EsWUFBVCxDQUFzQlYsT0FBdEIsRUFBK0I7QUFDM0IsV0FBT0wsUUFBUWdCLEtBQVIsQ0FBY1gsT0FBZCxJQUF5QkEsT0FBekIsR0FBbUMsRUFBRUEsU0FBU0EsT0FBWCxFQUExQztBQUNIO0FBQ0QsU0FBU1ksVUFBVCxHQUFzQjtBQUNsQixRQUFJQyxRQUFRQyxpQkFBWjtBQUNBLFdBQU9ELE1BQU1BLE1BQU0zQixNQUFOLEdBQWUsQ0FBckIsQ0FBUDtBQUNIO0FBQ0QsSUFBSTZCLFFBQVEsU0FBUkEsS0FBUSxDQUFVQyxPQUFWLEVBQW1CO0FBQzNCLFFBQUlBLFlBQVksS0FBSyxDQUFyQixFQUF3QjtBQUFFQSxrQkFBVSxFQUFWO0FBQWU7QUFDekNBLGNBQVV0QyxTQUFTLEVBQVQsRUFBYStCLGNBQWIsRUFBNkJDLGFBQWFNLE9BQWIsQ0FBN0IsQ0FBVjtBQUNBLFFBQUlDLFVBQVVELFFBQVFDLE9BQVIsSUFBbUJMLFlBQWpDO0FBQ0EsUUFBSU0sUUFBUUQsUUFBUUUsZUFBUixDQUF3QkgsUUFBUVQsUUFBaEMsQ0FBWjtBQUNBLFFBQUksQ0FBQ1csS0FBTCxFQUFZO0FBQ1JFLGdCQUFRQyxJQUFSLENBQWEsOENBQWI7QUFDQTtBQUNIO0FBQ0QsV0FBT0wsUUFBUUMsT0FBZjtBQUNBLFdBQU9ELFFBQVFULFFBQWY7QUFDQUMsVUFBTWMsSUFBTixDQUFXSixLQUFYO0FBQ0FBLFVBQU1LLEdBQU4sQ0FBVVAsT0FBVjtBQUNBUSxpQkFBYU4sTUFBTU8sS0FBbkI7QUFDQSxRQUFJVCxRQUFRYixRQUFSLEdBQW1CLENBQXZCLEVBQTBCO0FBQ3RCZSxjQUFNTyxLQUFOLEdBQWNDLFdBQVcsWUFBWTtBQUNqQ1Isa0JBQU1TLEtBQU47QUFDQW5CLG9CQUFRQSxNQUFNb0IsTUFBTixDQUFhLFVBQVVDLElBQVYsRUFBZ0I7QUFBRSx1QkFBT0EsU0FBU1gsS0FBaEI7QUFBd0IsYUFBdkQsQ0FBUjtBQUNILFNBSGEsRUFHWEYsUUFBUWIsUUFIRyxDQUFkO0FBSUg7QUFDRCxXQUFPZSxLQUFQO0FBQ0gsQ0FyQkQ7QUFzQkEsSUFBSVksZUFBZSxTQUFmQSxZQUFlLENBQVVoQyxJQUFWLEVBQWdCO0FBQUUsV0FBTyxVQUFVa0IsT0FBVixFQUFtQjtBQUFFLGVBQU9ELE1BQU1yQyxTQUFTLEVBQUVvQixNQUFNQSxJQUFSLEVBQVQsRUFBeUJZLGFBQWFNLE9BQWIsQ0FBekIsQ0FBTixDQUFQO0FBQWdFLEtBQTVGO0FBQStGLENBQXBJO0FBQ0EsQ0FBQyxTQUFELEVBQVksU0FBWixFQUF1QixNQUF2QixFQUErQmUsT0FBL0IsQ0FBdUMsVUFBVUMsTUFBVixFQUFrQjtBQUNyRGpCLFVBQU1pQixNQUFOLElBQWdCRixhQUFhRSxNQUFiLENBQWhCO0FBQ0gsQ0FGRDtBQUdBakIsTUFBTVksS0FBTixHQUFjLFlBQVk7QUFDdEJuQixVQUFNdUIsT0FBTixDQUFjLFVBQVViLEtBQVYsRUFBaUI7QUFDM0JBLGNBQU1TLEtBQU47QUFDSCxLQUZEO0FBR0FuQixZQUFRLEVBQVI7QUFDSCxDQUxEO0FBTUFPLE1BQU1rQixpQkFBTixHQUEwQixVQUFVakIsT0FBVixFQUFtQjtBQUN6Q3JDLFdBQU9DLE1BQVAsQ0FBYzZCLGNBQWQsRUFBOEJPLE9BQTlCO0FBQ0gsQ0FGRDtBQUdBRCxNQUFNbUIsbUJBQU4sR0FBNEIsWUFBWTtBQUNwQ3pCLHFCQUFpQi9CLFNBQVMsRUFBVCxFQUFhbUIsY0FBYixDQUFqQjtBQUNILENBRkQ7QUFHQUosUUFBUTBDLE9BQVIsR0FBa0JwQixLQUFsQiIsImZpbGUiOiJ0b2FzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIi4uL2NvbW1vbi91dGlsc1wiKTtcbnZhciBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICB0eXBlOiAndGV4dCcsXG4gICAgbWFzazogZmFsc2UsXG4gICAgbWVzc2FnZTogJycsXG4gICAgc2hvdzogdHJ1ZSxcbiAgICB6SW5kZXg6IDEwMDAsXG4gICAgZHVyYXRpb246IDMwMDAsXG4gICAgcG9zaXRpb246ICdtaWRkbGUnLFxuICAgIGZvcmJpZENsaWNrOiBmYWxzZSxcbiAgICBsb2FkaW5nVHlwZTogJ2NpcmN1bGFyJyxcbiAgICBzZWxlY3RvcjogJyN2YW4tdG9hc3QnXG59O1xudmFyIHF1ZXVlID0gW107XG52YXIgY3VycmVudE9wdGlvbnMgPSBfX2Fzc2lnbih7fSwgZGVmYXVsdE9wdGlvbnMpO1xuZnVuY3Rpb24gcGFyc2VPcHRpb25zKG1lc3NhZ2UpIHtcbiAgICByZXR1cm4gdXRpbHNfMS5pc09iaihtZXNzYWdlKSA/IG1lc3NhZ2UgOiB7IG1lc3NhZ2U6IG1lc3NhZ2UgfTtcbn1cbmZ1bmN0aW9uIGdldENvbnRleHQoKSB7XG4gICAgdmFyIHBhZ2VzID0gZ2V0Q3VycmVudFBhZ2VzKCk7XG4gICAgcmV0dXJuIHBhZ2VzW3BhZ2VzLmxlbmd0aCAtIDFdO1xufVxudmFyIFRvYXN0ID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIG9wdGlvbnMgPSBfX2Fzc2lnbih7fSwgY3VycmVudE9wdGlvbnMsIHBhcnNlT3B0aW9ucyhvcHRpb25zKSk7XG4gICAgdmFyIGNvbnRleHQgPSBvcHRpb25zLmNvbnRleHQgfHwgZ2V0Q29udGV4dCgpO1xuICAgIHZhciB0b2FzdCA9IGNvbnRleHQuc2VsZWN0Q29tcG9uZW50KG9wdGlvbnMuc2VsZWN0b3IpO1xuICAgIGlmICghdG9hc3QpIHtcbiAgICAgICAgY29uc29sZS53YXJuKCfmnKrmib7liLAgdmFuLXRvYXN0IOiKgueCue+8jOivt+ehruiupCBzZWxlY3RvciDlj4ogY29udGV4dCDmmK/lkKbmraPnoa4nKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkZWxldGUgb3B0aW9ucy5jb250ZXh0O1xuICAgIGRlbGV0ZSBvcHRpb25zLnNlbGVjdG9yO1xuICAgIHF1ZXVlLnB1c2godG9hc3QpO1xuICAgIHRvYXN0LnNldChvcHRpb25zKTtcbiAgICBjbGVhclRpbWVvdXQodG9hc3QudGltZXIpO1xuICAgIGlmIChvcHRpb25zLmR1cmF0aW9uID4gMCkge1xuICAgICAgICB0b2FzdC50aW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdG9hc3QuY2xlYXIoKTtcbiAgICAgICAgICAgIHF1ZXVlID0gcXVldWUuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7IHJldHVybiBpdGVtICE9PSB0b2FzdDsgfSk7XG4gICAgICAgIH0sIG9wdGlvbnMuZHVyYXRpb24pO1xuICAgIH1cbiAgICByZXR1cm4gdG9hc3Q7XG59O1xudmFyIGNyZWF0ZU1ldGhvZCA9IGZ1bmN0aW9uICh0eXBlKSB7IHJldHVybiBmdW5jdGlvbiAob3B0aW9ucykgeyByZXR1cm4gVG9hc3QoX19hc3NpZ24oeyB0eXBlOiB0eXBlIH0sIHBhcnNlT3B0aW9ucyhvcHRpb25zKSkpOyB9OyB9O1xuWydsb2FkaW5nJywgJ3N1Y2Nlc3MnLCAnZmFpbCddLmZvckVhY2goZnVuY3Rpb24gKG1ldGhvZCkge1xuICAgIFRvYXN0W21ldGhvZF0gPSBjcmVhdGVNZXRob2QobWV0aG9kKTtcbn0pO1xuVG9hc3QuY2xlYXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgcXVldWUuZm9yRWFjaChmdW5jdGlvbiAodG9hc3QpIHtcbiAgICAgICAgdG9hc3QuY2xlYXIoKTtcbiAgICB9KTtcbiAgICBxdWV1ZSA9IFtdO1xufTtcblRvYXN0LnNldERlZmF1bHRPcHRpb25zID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICBPYmplY3QuYXNzaWduKGN1cnJlbnRPcHRpb25zLCBvcHRpb25zKTtcbn07XG5Ub2FzdC5yZXNldERlZmF1bHRPcHRpb25zID0gZnVuY3Rpb24gKCkge1xuICAgIGN1cnJlbnRPcHRpb25zID0gX19hc3NpZ24oe30sIGRlZmF1bHRPcHRpb25zKTtcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBUb2FzdDtcbiJdfQ==